package org.generation.blogPessoal.controller;

import java.util.List;

import org.generation.blogPessoal.model.Postagem;
import org.generation.blogPessoal.repository.PostagemRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/postagens")
@CrossOrigin("*")
public class PostagemController {

	@Autowired
	private PostagemRepository repository;
	
	
	@GetMapping 
	public ResponseEntity<List<Postagem>> GetAll(){
		return ResponseEntity.ok(repository.findAll());
	}

}

/*
 * @RestController - informa para o spring que essa classe é uma controladora
 * 
 * @RequestMapping("/postagens") - definir a URI que essa classe sera acessada
 * (end-point) no caso acessado no postman de acordo com o parametro que foi
 * escrito, essa requisição vai passar a consumir esta classe
 * 
 * @CrossOrigin("*") - quando formos desenvolver o front - end e esse front-end
 * passar a consumir API que estamos fazendo o front end ira vir de outra origem
 * diferente pode ser de uma aplicação angular , ou de uma pagina escrita em
 * react, independente de qual origem que venha, nossa API tem que aceitar
 * (*)essa classe vai aceitar requisição de qualquer origem, liberação para que
 * ele seja consumido de qualquer origem
 * 
 * 
 * 
 * private PostagemRepository repository - primeira coisa : injetar o nosso
 * repositorio dentro do controle, e depois dar um nome (qualquer), por ser uma
 * interface não conseguimos instanciar esse comando
 * 
 * 
 * @Autowired - esse cara cuida da parte da instanciação dessa interface para o
 * spring utilizando essa anotação, garantindo o acesso de todos os serviços
 * oferecidos da interface a partir do controller, e injetamos do Autowired que
 * seria o serviço de injeção de dependencia do spring o nosso serviço postagem
 * repository
 * 
 */
